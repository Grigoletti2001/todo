{"ast":null,"code":"var _jsxFileName = \"/Users/josephgrigolettiii/Github/todo/todo/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst Todo = ({\n  todo\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"todo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 28\n  }\n}, todo.text);\n\nfunction TodoForm({\n  addTodo\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([{\n    text: \"Meditate\"\n  }, {\n    text: \"Go for a walk\"\n  }, {\n    text: \"Study hard\"\n  }, {\n    text: \"Take medicine\"\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, todos.map((todo, index) => /*#__PURE__*/React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n\n  function Todo({\n    todo,\n    index,\n    completeTodo\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo\",\n      style: {\n        textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, todo.text, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => completeTodo(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Complete\")));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josephgrigolettiii/Github/todo/todo/src/App.js"],"names":["React","useState","Todo","todo","text","TodoForm","addTodo","value","setValue","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","map","index","completeTodo","textDecoration","isCompleted"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst Todo = ({ todo }) => <div className=\"todo\">{todo.text}</div>;\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { text: \"Meditate\" },\n    { text: \"Go for a walk\" },\n    { text: \"Study hard\" },\n\n    { text: \"Take medicine\" }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n\n  \n  function Todo({ todo, index, completeTodo }) {\n    return (\n      <div\n        className=\"todo\"\n        style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n      >\n        {todo.text}\n\n        <div>\n          <button onClick={() => completeTodo(index)}>Complete</button>\n        </div>\n      </div>\n    );\n  }\n\n\n\n\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}